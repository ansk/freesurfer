# Makefile.in generated by automake 1.14.1 from Makefile.am.
# mri_em_register/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/freesurfer
pkgincludedir = $(includedir)/freesurfer
pkglibdir = $(libdir)/freesurfer
pkglibexecdir = $(libexecdir)/freesurfer
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = Linux-debian3_x86_64
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = mri_em_register$(EXEEXT) $(am__EXEEXT_1)
#am__append_1 = mri_em_register_cuda
check_PROGRAMS = foo$(EXEEXT)
DIST_COMMON = $(top_srcdir)/Makefile.extra $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(top_srcdir)/config/mkinstalldirs \
	$(top_srcdir)/config/depcomp $(top_srcdir)/config/test-driver
subdir = mri_em_register
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/m4/autotroll.m4 $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
#am__EXEEXT_1 = mri_em_register_cuda$(EXEEXT)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(foodir)" \
	"$(DESTDIR)$(foo2dir)"
PROGRAMS = $(bin_PROGRAMS)
am_foo_OBJECTS =
foo_OBJECTS = $(am_foo_OBJECTS)
foo_LDADD = $(LDADD)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_mri_em_register_OBJECTS = mri_em_register.$(OBJEXT) \
	findtranslation.$(OBJEXT) emregisterutils.$(OBJEXT)
mri_em_register_OBJECTS = $(am_mri_em_register_OBJECTS)
mri_em_register_DEPENDENCIES = $(addprefix $(top_builddir)/, \
	$(LIBS_MGH))
mri_em_register_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(mri_em_register_LDFLAGS) \
	$(LDFLAGS) -o $@
am__mri_em_register_cuda_SOURCES_DIST = mri_em_register.c \
	em_register_cuda.cu em_register_cuda.h findtranslation.cpp \
	findtranslation.h emregisterutils.cpp emregisterutils.h
#am_mri_em_register_cuda_OBJECTS = mri_em_register_cuda-mri_em_register.$(OBJEXT) \
#	em_register_cuda.$(OBJEXT) \
#	mri_em_register_cuda-findtranslation.$(OBJEXT) \
#	mri_em_register_cuda-emregisterutils.$(OBJEXT)
mri_em_register_cuda_OBJECTS = $(am_mri_em_register_cuda_OBJECTS)
am__DEPENDENCIES_1 =
#mri_em_register_cuda_DEPENDENCIES = $(addprefix \
#	$(top_builddir)/, $(LIBS_CUDA_MGH)) \
#	$(am__DEPENDENCIES_1)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/config/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(foo_SOURCES) $(mri_em_register_SOURCES) \
	$(mri_em_register_cuda_SOURCES)
DIST_SOURCES = $(foo_SOURCES) $(mri_em_register_SOURCES) \
	$(am__mri_em_register_cuda_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
DATA = $(foo_DATA) $(foo2_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS =  .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/config/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/missing aclocal-1.14
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
ANN_CFLAGS = -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/ann/current/include
ANN_DIR = NO
ANN_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/ann/current/lib
ANN_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/ann/current/lib
AR = ar
AUTOCONF = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/missing autoconf
AUTOHEADER = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/missing autoheader
AUTOMAKE = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/missing automake-1.14
AWK = gawk
BLT_CFLAGS = 
BLT_LIBS = 
BOOST_CFLAGS = 
BOOST_DIR = 
BOOST_LIB = 
BOOST_LIBS = 
BOOST_PO_LIB = 
BYTEORDER = 1234
CC = gcc
CCDEPMODE = depmode=gcc3
CCLD = g++
CFLAGS = 
CPP = gcc -E
CPPFLAGS = -g -O3 -msse2 -mfpmath=sse -Wall  -DUSE_SSE_MATHFUN -fopenmp -DHAVE_OPENMP -m64 -DLinux -DANSI -fdata-sections -ffunction-sections -Wl,--gc-sections -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/include
CPPUNIT_CFLAGS = -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/cppunit/current/include
CPPUNIT_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/cppunit/current
CPPUNIT_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/cppunit/current/lib
CPPUNIT_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/cppunit/current/lib
CPUCAPS = model name	: Intel(R) Xeon(R) CPU E5-2670 v3 @ 2.30GHz
CPUTYPE = intel_haswell
CUDA_CFLAGS = 
CUDA_DIR = 
CUDA_LIBS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DYNAMIC_LIB_EXT = .so
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_LIBS = 
F77 = f77
FCLIBS = 
FFLAGS = -g -O3 -msse2 -mfpmath=sse
GDCM_CFLAGS = 
GDCM_DIR = 
GDCM_LIB = 
GDCM_LIBS = 
GLU_CFLAGS =  
GLU_LIBS = -lGLU -lGL -L/usr/lib/x86_64-linux-gnu -lX11  -lm
GL_CFLAGS =  
GL_LIBS = -lGL -L/usr/lib/x86_64-linux-gnu -lX11  -lm
GREP = /bin/grep
GTS_CFLAGS = 
GTS_DIR = 
GTS_LIBS = 
HAS_GZIP = 1
HAS_ZCAT = 1
HAVE_OPENGL = -DHAVE_OPENGL
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
ITK_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Algorithms -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/BasicFilters -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Common -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/IO -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Numerics -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Numerics/Statistics -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Review -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Review/Statistics -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/SpatialObject -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/include/InsightToolkit/Utilities
ITK_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current
ITK_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit
ITK_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit
JPEG_CFLAGS = 
JPEG_LIBS = 
KWWIDGETS_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/KWWidgets/current/include/KWWidgets
KWWIDGETS_CXXFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/KWWidgets/current/include/KWWidgets
KWWIDGETS_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/KWWidgets/current
KWWIDGETS_LIBS =  -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/KWWidgets/current/lib/KWWidgets
LATEX = 
LDFLAGS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib -L/usr/lib64 -L/usr/X11R6/lib64  -fopenmp -fdata-sections -ffunction-sections -Wl,--gc-sections   -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/lib  -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit 
LDFLAGS_TCL =  -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current/lib
LIBDIRS_MGH = utils rgb unix dicom hipsstubs
LIBOBJS = 
LIBS =     /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKAlgorithms.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKCommon.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKNumerics.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKMetaIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKniftiio.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKNrrdIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkpng.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitksys.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitktiff.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkv3p_netlib.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkzlib.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkgdcm.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkopenjpeg.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg8.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg12.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg16.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKDICOMParser.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/libuuid-1.0.3/.libs/libuuid.a -lz -lm -lcrypt -ldl -lpthread     /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libvolume_io.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libminc.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libnetcdf.a -lvnl_algo -lvnl -lvcl -lnetlib -lv3p_netlib 
LIBS_CUDA_MGH = utils/libutils_cuda.a fsgdf/libfsgdf.a rgb/librgb.a unix/libunix.a dicom/libdicom.a hipsstubs/libhipsstubs.a log/liblog.a xml2/libxml2.a jpeg/libjpeg.a tiff/libtiff.a expat/libexpat.a
LIBS_GDCM = 
LIBS_ICC = 
LIBS_ITK =   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKAlgorithms.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKCommon.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKNumerics.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKMetaIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKniftiio.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKNrrdIO.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkpng.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitksys.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitktiff.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkv3p_netlib.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkzlib.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkgdcm.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkopenjpeg.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg8.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg12.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libitkjpeg16.a   /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/itk/current/lib/InsightToolkit/libITKDICOMParser.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/libuuid-1.0.3/.libs/libuuid.a
LIBS_MGH =   utils/libutils.a   fsgdf/libfsgdf.a   rgb/librgb.a   unix/libunix.a   dicom/libdicom.a   hipsstubs/libhipsstubs.a   log/liblog.a   xml2/libxml2.a jpeg/libjpeg.a tiff/libtiff.a expat/libexpat.a
LIBS_MNI = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libvolume_io.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libminc.a /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libnetcdf.a
LIBS_NIFTI = 
LIBS_OPEN64 = 
LIBS_OPENGL = -lGLU -lGL -L/usr/lib/x86_64-linux-gnu -lX11  -lm 
LIBS_TCL =    
LIBS_TCL_OPENGL =     -lGLU -lGL -L/usr/lib/x86_64-linux-gnu -lX11  -lm 
LIBS_VXL = -lvnl_algo -lvnl -lvcl -lnetlib -lv3p_netlib
LIBS_XAWPLUS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIB_BLAS = /usr/lib/libblas.a
LIB_BLT = 
LIB_BLT_JPEG = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tiffjpegglut/current/lib/libjpeg.a
LIB_CRYPT = -lcrypt
LIB_CUDA = 
LIB_EXPAT = 
LIB_G2C_A = 
LIB_GFORTRAN = -lgfortran
LIB_JPEG = 
LIB_LAPACK = /usr/lib/liblapack.a
LIB_NETCDF = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib/libnetcdf.a
LIB_TCL = 
LIB_TIFF = 
LIB_TIX = 
LIB_TK = 
LIB_UUID = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/libuuid-1.0.3/.libs/libuuid.a
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/missing makeinfo
MKDIR_P = /bin/mkdir -p
MNI_CFLAGS = -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/include
MNI_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current
MNI_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/mni/current/lib
MOC = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin/moc
MPI_CFLAGS = 
MPI_DIR = 
MPI_LIB = 
MPI_LIBS = 
NIFTI_CFLAGS = 
NIFTI_DIR = 
NIFTI_LIB = 
NIFTI_LIBS = 
NVCC = no
NVCCFLAGS = -arch sm_11 --ptxas-options=-v -g
OBJEXT = o
OPENCL_CFLAGS = 
OPENCL_LIBS = 
OPENCV_CXXFLAGS = 
OPENCV_DIR = no
OPENCV_LIBS = 
OPENMP_FLAG = -fopenmp
OS = Linux
OS_CPPFLAGS = -fdata-sections -ffunction-sections -Wl,--gc-sections
OS_LDFLAGS = -fdata-sections -ffunction-sections -Wl,--gc-sections
PACKAGE = freesurfer
PACKAGE_BUGREPORT = freesurfer@nmr.mgh.harvard.edu
PACKAGE_NAME = Freesurfer
PACKAGE_STRING = Freesurfer dev
PACKAGE_TARNAME = freesurfer
PACKAGE_URL = 
PACKAGE_VERSION = dev
PATH_SEPARATOR = :
PETSC_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/petsc/current/include
PETSC_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/petsc/current
PETSC_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/petsc/current/lib
PETSC_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/petsc/current/lib
POW_LIB = 
PTHREAD_CC = gcc
PTHREAD_CFLAGS = 
PTHREAD_LIBS = 
QMAKE = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin/qmake
QT_CFLAGS = -pipe -O2 -Wall -W -D_REENTRANT -fPIC $(QT_DEFINES)
QT_CPPFLAGS = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_X11EXTRAS_LIB -DQT_GUI_LIB -DQT_SCRIPT_LIB -DQT_SCRIPTTOOLS_LIB -DQT_CORE_LIB -I. -I. -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtOpenGL -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtWidgets -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtX11Extras -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtGui -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtScript -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtScriptTools -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtCore -I. -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/mkspecs/linux-g++
QT_CXXFLAGS = -pipe -O2 -std=gnu++0x -Wall -W -D_REENTRANT -fPIC $(QT_DEFINES)
QT_DEFINES = -DQT_NO_DEBUG -DQT_OPENGL_LIB -DQT_WIDGETS_LIB -DQT_X11EXTRAS_LIB -DQT_GUI_LIB -DQT_SCRIPT_LIB -DQT_SCRIPTTOOLS_LIB -DQT_CORE_LIB
QT_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin/..
QT_INCPATH = -I. -I. -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtOpenGL -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtWidgets -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtX11Extras -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtGui -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtScript -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtScriptTools -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/include/QtCore -I. -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/5.6.2/5.6/gcc_64/mkspecs/linux-g++
QT_LDFLAGS = -Wl,-O1 -Wl,-rpath,/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib -Wl,-rpath-link,/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib
QT_LFLAGS = -Wl,-O1 -Wl,-rpath,/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib -Wl,-rpath-link,/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib
QT_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/lib -lQt5OpenGL -L/usr/lib64 -lQt5Widgets -lQt5X11Extras -L/usr/pubsw/packages/qt/5.6.2/5.6/gcc_64/lib -lQt5Gui -lQt5Script -lQt5ScriptTools -lQt5Core -lGL -lpthread 
QT_PATH = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin
QT_VERSION_MAJOR = 4
RANLIB = ranlib
RCC = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin/rcc
SET_MAKE = 
SHARED_CFLAGS = -fPIC
SHARED_LDFLAGS = -shared
SHELL = /bin/bash
STRIP = strip
TCL_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current/include
TCL_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current
TCL_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current/lib
TCL_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current/lib
TEEM_32BIT = 0
TEEM_DIO = 0
TEEM_ENDIAN = 1234
TEEM_QNANHIBIT = 1
TESTS_ENVIRONMENT = SURFER_FRONTDOOR=1 LD_LIBRARY_PATH=/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/tcltktixblt/current/lib:/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/lib/vtk-5.6:/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/cppunit/current/lib
TIFF_CFLAGS = 
TIFF_LIBS = 
TIXWISH = 
UIC = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/qt/current/bin/uic
VERSION = dev
VTK_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/include/vtk-5.6
VTK_COCOA_CFLAGS = 
VTK_COCOA_CXXFLAGS = 
VTK_COCOA_DIR = 
VTK_COCOA_LIB = NO
VTK_COCOA_LIBS = -LNO
VTK_COCOA_LIB_VTK = 
VTK_CXXFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/include/vtk-5.6
VTK_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current
VTK_EXPAT_LIB = ../expat/libexpat.a
VTK_FREETYPE_LIB = -lfreetype
VTK_HDF5_LIB = 
VTK_JPEG_LIB = ../jpeg/libjpeg.a
VTK_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/lib/vtk-5.6
VTK_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/lib/vtk-5.6
VTK_LIB_VTK = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vtk/current/lib/vtk-5.6
VTK_LSDYNA_LIB = 
VTK_METAIO_LIB = -lvtkmetaio
VTK_MPEG2ENCODE_LIB = 
VTK_NETCDFCXX_LIB = 
VTK_PNG_LIB = -lvtkpng
VTK_SQLITE_LIB = -lvtksqlite
VTK_TIFF_LIB = ../tiff/libtiff.a
VTK_VERDICT_LIB = -lvtkverdict
VTK_Z_LIB = -lvtkzlib
VXL_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/include/vxl/core -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/include/vxl/vcl -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/include/vxl/v3p/netlib -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/include/vxl/v3p/netlib/opt
VXL_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current
VXL_LIB = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/lib
VXL_LIBS = -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/vxl/current/lib
WXWIDGETS_CFLAGS = -I/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/wx/include/gtk2-ansi-release-static-2.8 -I/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D_LARGEFILE_SOURCE=1 -D__WXGTK__ -pthread
WXWIDGETS_CXXFLAGS = -I/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/wx/include/gtk2-ansi-release-static-2.8 -I/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/include/wx-2.8 -D_FILE_OFFSET_BITS=64 -D_LARGE_FILES -D_LARGEFILE_SOURCE=1 -D__WXGTK__ -pthread
WXWIDGETS_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/wxWidgets/current
WXWIDGETS_GL_LIBS = -L/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib -pthread   -L/usr/X11R6/lib64   -L/usr/lib64 /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_gl-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_base-2.8.a -lGL -lGLU -lz -ldl -lm 
WXWIDGETS_LIBS = -L/usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib -pthread   -L/usr/X11R6/lib64   /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_richtext-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_aui-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_xrc-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_qa-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_html-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_adv-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_gtk2_core-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_base_xml-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_base_net-2.8.a /usr/pubsw/packages/wxWidgets/wxGTK-2.8.9/lib/libwx_base-2.8.a -Wl,--export-dynamic -pthread -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lgdk_pixbuf-2.0 -lpangoxft-1.0 -lpangox-1.0 -lpango-1.0 -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -lglib-2.0 -lXinerama -lXxf86vm -lSM -lpng ../jpeg/libjpeg.a ../tiff/libtiff.a ../expat/libexpat.a -lz -ldl -lm  -lwx_gtk2_gl-2.8
WXWIDGETS_OPTIONAL_LIBS = 
XAWPLUS_CFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/xawplus/current/include
XAWPLUS_CXXFLAGS =  -I/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/xawplus/current/include
XAWPLUS_DIR = /hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/xawplus/current
XAWPLUS_LIBS =  -L/hydradb/hydra_io/vypocty/skoch/bin/freesurfer_src_git/centos6-x86_64-packages/xawplus/current/lib
XMKMF = 
XMLLINT = xmllint
XXD = xxd
X_LIBS =  -L/usr/lib/x86_64-linux-gnu -lX11 -L/usr/lib/x86_64-linux-gnu -lXmu
abs_builddir = /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/mri_em_register
abs_srcdir = /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/mri_em_register
abs_top_builddir = /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer
abs_top_srcdir = /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = f77
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = debian3
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gl_cflags = 
gl_libs = 
host = Linux-debian3_x86_64
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = debian3
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_src_git/freesurfer/config/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /hydra-db/hydra_io/vypocty/skoch/bin/freesurfer_dev_20170208
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CFLAGS = -I$(top_srcdir)/include
AM_CXXFLAGS = -I$(top_srcdir)/include\
             $(BOOST_CFLAGS)\
             -Wall -Wextra

AM_LDFLAGS = 
mri_em_register_SOURCES = mri_em_register.c\
                        findtranslation.cpp findtranslation.h\
                        emregisterutils.cpp emregisterutils.h

mri_em_register_LDADD = $(addprefix $(top_builddir)/, $(LIBS_MGH))
mri_em_register_LDFLAGS = $(OS_LDFLAGS)
foodir = $(prefix)/docs/xml
foo_DATA = mri_em_register.help.xml mri_em_register_cuda.help.xml
foo2dir = $(prefix)/docs/html
foo2_DATA = mri_em_register.help.xml mri_em_register_cuda.help.xml.html
#mri_em_register_cuda_SOURCES = mri_em_register.c \
#  em_register_cuda.cu em_register_cuda.h\
#  findtranslation.cpp findtranslation.h\
#  emregisterutils.cpp emregisterutils.h

#mri_em_register_cuda_CFLAGS = $(CUDA_CFLAGS) $(AM_CFLAGS) -DFS_CUDA
#mri_em_register_cuda_CXXFLAGS = $(CUDA_CFLAGS) $(AM_CFLAGS) -DFS_CUDA
#mri_em_register_cuda_LDADD = $(addprefix $(top_builddir)/, $(LIBS_CUDA_MGH)) $(CUDA_LIBS)
#mri_em_register_cuda_LDFLAGS = $(OS_LDFLAGS) 
#mri_em_register_cuda_LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) \
#        $(LIBTOOLFLAGS) --mode=link $(CCLD) $(mri_em_register_cuda_CFLAGS) \
#        $(CFLAGS) $(mri_em_register_cuda_LDFLAGS) $(LDFLAGS) -o $@


# trick to get test data into the build directory
foo_SOURCES = 
TESTS = test_mri_em_register $(top_builddir)/scripts/help_xml_validate
EXTRA_DIST = $(foo_DATA) $(BUILT_SOURCES) test_mri_em_register

# Our release target. Include files to be excluded here. They will be
# found and removed after 'make install' is run during the 'make
# release' target.
EXCLUDE_FILES = ""
BUILT_SOURCES = mri_em_register.help.xml.h mri_em_register_cuda.help.xml.h \
	mri_em_register.help.xml.html mri_em_register_cuda.help.xml.html

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .cu .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.extra $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu mri_em_register/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu mri_em_register/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/Makefile.extra:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

mri_em_register$(EXEEXT): $(mri_em_register_OBJECTS) $(mri_em_register_DEPENDENCIES) $(EXTRA_mri_em_register_DEPENDENCIES) 
	@rm -f mri_em_register$(EXEEXT)
	$(AM_V_CXXLD)$(mri_em_register_LINK) $(mri_em_register_OBJECTS) $(mri_em_register_LDADD) $(LIBS)

mri_em_register_cuda$(EXEEXT): $(mri_em_register_cuda_OBJECTS) $(mri_em_register_cuda_DEPENDENCIES) $(EXTRA_mri_em_register_cuda_DEPENDENCIES) 
	@rm -f mri_em_register_cuda$(EXEEXT)
	$(AM_V_GEN)$(mri_em_register_cuda_LINK) $(mri_em_register_cuda_OBJECTS) $(mri_em_register_cuda_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/emregisterutils.Po
include ./$(DEPDIR)/findtranslation.Po
include ./$(DEPDIR)/mri_em_register.Po
include ./$(DEPDIR)/mri_em_register_cuda-emregisterutils.Po
include ./$(DEPDIR)/mri_em_register_cuda-findtranslation.Po
include ./$(DEPDIR)/mri_em_register_cuda-mri_em_register.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(LTCOMPILE) -c -o $@ $<

mri_em_register_cuda-mri_em_register.o: mri_em_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CFLAGS) $(CFLAGS) -MT mri_em_register_cuda-mri_em_register.o -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-mri_em_register.Tpo -c -o mri_em_register_cuda-mri_em_register.o `test -f 'mri_em_register.c' || echo '$(srcdir)/'`mri_em_register.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-mri_em_register.Tpo $(DEPDIR)/mri_em_register_cuda-mri_em_register.Po
#	$(AM_V_CC)source='mri_em_register.c' object='mri_em_register_cuda-mri_em_register.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CFLAGS) $(CFLAGS) -c -o mri_em_register_cuda-mri_em_register.o `test -f 'mri_em_register.c' || echo '$(srcdir)/'`mri_em_register.c

mri_em_register_cuda-mri_em_register.obj: mri_em_register.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CFLAGS) $(CFLAGS) -MT mri_em_register_cuda-mri_em_register.obj -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-mri_em_register.Tpo -c -o mri_em_register_cuda-mri_em_register.obj `if test -f 'mri_em_register.c'; then $(CYGPATH_W) 'mri_em_register.c'; else $(CYGPATH_W) '$(srcdir)/mri_em_register.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-mri_em_register.Tpo $(DEPDIR)/mri_em_register_cuda-mri_em_register.Po
#	$(AM_V_CC)source='mri_em_register.c' object='mri_em_register_cuda-mri_em_register.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CFLAGS) $(CFLAGS) -c -o mri_em_register_cuda-mri_em_register.obj `if test -f 'mri_em_register.c'; then $(CYGPATH_W) 'mri_em_register.c'; else $(CYGPATH_W) '$(srcdir)/mri_em_register.c'; fi`

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mri_em_register_cuda-findtranslation.o: findtranslation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -MT mri_em_register_cuda-findtranslation.o -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-findtranslation.Tpo -c -o mri_em_register_cuda-findtranslation.o `test -f 'findtranslation.cpp' || echo '$(srcdir)/'`findtranslation.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-findtranslation.Tpo $(DEPDIR)/mri_em_register_cuda-findtranslation.Po
#	$(AM_V_CXX)source='findtranslation.cpp' object='mri_em_register_cuda-findtranslation.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -c -o mri_em_register_cuda-findtranslation.o `test -f 'findtranslation.cpp' || echo '$(srcdir)/'`findtranslation.cpp

mri_em_register_cuda-findtranslation.obj: findtranslation.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -MT mri_em_register_cuda-findtranslation.obj -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-findtranslation.Tpo -c -o mri_em_register_cuda-findtranslation.obj `if test -f 'findtranslation.cpp'; then $(CYGPATH_W) 'findtranslation.cpp'; else $(CYGPATH_W) '$(srcdir)/findtranslation.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-findtranslation.Tpo $(DEPDIR)/mri_em_register_cuda-findtranslation.Po
#	$(AM_V_CXX)source='findtranslation.cpp' object='mri_em_register_cuda-findtranslation.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -c -o mri_em_register_cuda-findtranslation.obj `if test -f 'findtranslation.cpp'; then $(CYGPATH_W) 'findtranslation.cpp'; else $(CYGPATH_W) '$(srcdir)/findtranslation.cpp'; fi`

mri_em_register_cuda-emregisterutils.o: emregisterutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -MT mri_em_register_cuda-emregisterutils.o -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-emregisterutils.Tpo -c -o mri_em_register_cuda-emregisterutils.o `test -f 'emregisterutils.cpp' || echo '$(srcdir)/'`emregisterutils.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-emregisterutils.Tpo $(DEPDIR)/mri_em_register_cuda-emregisterutils.Po
#	$(AM_V_CXX)source='emregisterutils.cpp' object='mri_em_register_cuda-emregisterutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -c -o mri_em_register_cuda-emregisterutils.o `test -f 'emregisterutils.cpp' || echo '$(srcdir)/'`emregisterutils.cpp

mri_em_register_cuda-emregisterutils.obj: emregisterutils.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -MT mri_em_register_cuda-emregisterutils.obj -MD -MP -MF $(DEPDIR)/mri_em_register_cuda-emregisterutils.Tpo -c -o mri_em_register_cuda-emregisterutils.obj `if test -f 'emregisterutils.cpp'; then $(CYGPATH_W) 'emregisterutils.cpp'; else $(CYGPATH_W) '$(srcdir)/emregisterutils.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/mri_em_register_cuda-emregisterutils.Tpo $(DEPDIR)/mri_em_register_cuda-emregisterutils.Po
#	$(AM_V_CXX)source='emregisterutils.cpp' object='mri_em_register_cuda-emregisterutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mri_em_register_cuda_CXXFLAGS) $(CXXFLAGS) -c -o mri_em_register_cuda-emregisterutils.obj `if test -f 'emregisterutils.cpp'; then $(CYGPATH_W) 'emregisterutils.cpp'; else $(CYGPATH_W) '$(srcdir)/emregisterutils.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-fooDATA: $(foo_DATA)
	@$(NORMAL_INSTALL)
	@list='$(foo_DATA)'; test -n "$(foodir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(foodir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(foodir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(foodir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(foodir)" || exit $$?; \
	done

uninstall-fooDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(foo_DATA)'; test -n "$(foodir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(foodir)'; $(am__uninstall_files_from_dir)
install-foo2DATA: $(foo2_DATA)
	@$(NORMAL_INSTALL)
	@list='$(foo2_DATA)'; test -n "$(foo2dir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(foo2dir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(foo2dir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(foo2dir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(foo2dir)" || exit $$?; \
	done

uninstall-foo2DATA:
	@$(NORMAL_UNINSTALL)
	@list='$(foo2_DATA)'; test -n "$(foo2dir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(foo2dir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
test_mri_em_register.log: test_mri_em_register
	@p='test_mri_em_register'; \
	b='test_mri_em_register'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
$(top_builddir)/scripts/help_xml_validate.log: $(top_builddir)/scripts/help_xml_validate
	@p='$(top_builddir)/scripts/help_xml_validate'; \
	b='$(top_builddir)/scripts/help_xml_validate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(DATA)
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(foodir)" "$(DESTDIR)$(foo2dir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-foo2DATA install-fooDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-foo2DATA \
	uninstall-fooDATA

.MAKE: all check check-am install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libtool clean-local cscopelist-am ctags ctags-am \
	dist-hook distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-foo2DATA install-fooDATA \
	install-html install-html-am install-info install-info-am \
	install-man install-pdf install-pdf-am install-ps \
	install-ps-am install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am recheck tags tags-am \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-foo2DATA uninstall-fooDATA


# BUILDCUDA is defined if configure.in finds CUDA
# rules for building cuda files
#.cu.o:
#	$(NVCC) -o $@ -c $< $(NVCCFLAGS) $(CUDA_CFLAGS) $(AM_CFLAGS) $(MNI_CFLAGS)
foo:
	if ! test -f "$(top_builddir)/mri_em_register/testdata.tar.gz"; then \
		cp -v $(top_srcdir)/mri_em_register/testdata.tar.gz \
					$(top_builddir)/mri_em_register/; fi;

clean-local:
	rm -f $(BUILT_SOURCES)

.PHONY: release

# A rule for making the release. 
# It just creates a list of files for later removal from files in an exclude list.
release: install
	list=( $(EXCLUDE_FILES) ); for p in $${list[@]}; do \
		echo "rm -fv $(prefix)/$(subdir)/$$p" >> $(prefix)/EXCLUDE_FILES_rm_cmds \;; \
	done; \
	list=( $(SUBDIRS) ); for subdir in $${list[@]}; do \
		echo "Making release in $$subdir"; \
		(cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) release) \
		|| exit 1; \
	done;

# A rule for making the source tarball.	 It removes files declared in a 
# Makefile.am's EXCLUDE_FILES list (stuff that should not go outside the
# NMR Center).
dist-hook:
	list=( $(EXCLUDE_FILES) ); for p in $${list[@]}; do \
		find $(distdir) -follow -name $$p -exec rm -Rf {} \;; \
	done; \
	extra_dist=( $(EXTRA_DIST) );

# A rule to create a header from an xml file in order to
# include the file as a string at compilation time (see ProjectHelp wiki page)
%.xml.h : %.xml
	xxd -i $< $@

# A rule to create an html file from an xml file (see ProjectHelp wiki page)
%.xml.html : %.xml
	$(top_builddir)/utils/xmlToHtml $< $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
